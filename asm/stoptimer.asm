.set noat # allow use of $at
.set noreorder # don't insert nops after branches
.set gp=64 # allow use of 64bit registers
.macro glabel label
    .global \label
    \label:
.endm


glabel osStopTimer
/* 012164 0x8008BE70 27BDFFD0 */ addiu	$sp, $sp, -0X30
/* 012165 0x8008BE74 AFA40030 */ sw	$a0, 0X30($sp)
/* 012166 0x8008BE78 8FAE0030 */ lw	$t6, 0X30($sp)
/* 012167 0x8008BE7C AFBF001C */ sw	$ra, 0X1C($sp)
/* 012168 0x8008BE80 AFB00018 */ sw	$s0, 0X18($sp)
/* 012169 0x8008BE84 8DCF0000 */ lw	$t7, 0X0($t6)
/* 012170 0x8008BE88 15E00003 */ bnez	$t7, .L8008BE98
/* 012171 0x8008BE8C 00000000 */ nop
/* 012172 0x8008BE90 1000002C */ b	.L8008BF44
/* 012173 0x8008BE94 2402FFFF */ li	$v0, -0X1
.L8008BE98:
/* 012174 0x8008BE98 0C024698 */ jal	__osDisableInt
/* 012175 0x8008BE9C 00000000 */ nop
/* 012176 0x8008BEA0 8FB80030 */ lw	$t8, 0X30($sp)
/* 012177 0x8008BEA4 3C088009 */ lui	$t0, %hi(__osTimerList)
/* 012178 0x8008BEA8 8D087F70 */ lw	$t0, %lo(__osTimerList)($t0)
/* 012179 0x8008BEAC 8F190000 */ lw	$t9, 0X0($t8)
/* 012180 0x8008BEB0 00408025 */ move	$s0, $v0
/* 012181 0x8008BEB4 1328000D */ beq	$t9, $t0, .L8008BEEC
/* 012182 0x8008BEB8 AFB90028 */ sw	$t9, 0X28($sp)
/* 012183 0x8008BEBC 27290010 */ addiu	$t1, $t9, 0X10
/* 012184 0x8008BEC0 AFA90024 */ sw	$t1, 0X24($sp)
/* 012185 0x8008BEC4 8D2B0004 */ lw	$t3, 0X4($t1)
/* 012186 0x8008BEC8 8F0D0014 */ lw	$t5, 0X14($t8)
/* 012187 0x8008BECC 8D2A0000 */ lw	$t2, 0X0($t1)
/* 012188 0x8008BED0 8F0C0010 */ lw	$t4, 0X10($t8)
/* 012189 0x8008BED4 016D7821 */ addu	$t7, $t3, $t5
/* 012190 0x8008BED8 01ED082B */ sltu	$at, $t7, $t5
/* 012191 0x8008BEDC 002A7021 */ addu	$t6, $at, $t2
/* 012192 0x8008BEE0 01CC7021 */ addu	$t6, $t6, $t4
/* 012193 0x8008BEE4 AD2E0000 */ sw	$t6, 0X0($t1)
/* 012194 0x8008BEE8 AD2F0004 */ sw	$t7, 0X4($t1)
.L8008BEEC:
/* 012195 0x8008BEEC 8FA80030 */ lw	$t0, 0X30($sp)
/* 012196 0x8008BEF0 3C0F8009 */ lui	$t7, %hi(__osTimerList)
/* 012197 0x8008BEF4 8D190000 */ lw	$t9, 0X0($t0)
/* 012198 0x8008BEF8 8D180004 */ lw	$t8, 0X4($t0)
/* 012199 0x8008BEFC AF190000 */ sw	$t9, 0X0($t8)
/* 012200 0x8008BF00 8FAA0030 */ lw	$t2, 0X30($sp)
/* 012201 0x8008BF04 8D4B0004 */ lw	$t3, 0X4($t2)
/* 012202 0x8008BF08 8D4C0000 */ lw	$t4, 0X0($t2)
/* 012203 0x8008BF0C AD8B0004 */ sw	$t3, 0X4($t4)
/* 012204 0x8008BF10 8FAD0030 */ lw	$t5, 0X30($sp)
/* 012205 0x8008BF14 ADA00000 */ sw	$zero, 0X0($t5)
/* 012206 0x8008BF18 8FAE0030 */ lw	$t6, 0X30($sp)
/* 012207 0x8008BF1C ADC00004 */ sw	$zero, 0X4($t6)
/* 012208 0x8008BF20 8DEF7F70 */ lw	$t7, %lo(__osTimerList)($t7)
/* 012209 0x8008BF24 8DE90000 */ lw	$t1, 0X0($t7)
/* 012210 0x8008BF28 152F0003 */ bne	$t1, $t7, .L8008BF38
/* 012211 0x8008BF2C 00000000 */ nop
/* 012212 0x8008BF30 0C0244A0 */ jal	__osSetCompare
/* 012213 0x8008BF34 00002025 */ move	$a0, $zero
.L8008BF38:
/* 012214 0x8008BF38 0C0246B4 */ jal	__osRestoreInt
/* 012215 0x8008BF3C 02002025 */ move	$a0, $s0
/* 012216 0x8008BF40 00001025 */ move	$v0, $zero
.L8008BF44:
/* 012217 0x8008BF44 8FBF001C */ lw	$ra, 0X1C($sp)
/* 012218 0x8008BF48 8FB00018 */ lw	$s0, 0X18($sp)
/* 012219 0x8008BF4C 27BD0030 */ addiu	$sp, $sp, 0X30
/* 012220 0x8008BF50 03E00008 */ jr	$ra
/* 012221 0x8008BF54 00000000 */ nop
/* 012222 0x8008BF58 00000000 */ nop
/* 012223 0x8008BF5C 00000000 */ nop
